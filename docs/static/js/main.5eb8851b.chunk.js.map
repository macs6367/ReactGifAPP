{"version":3,"sources":["components/AddCategory.jsx","components/helpers/getGifs.jsx","components/GifGridItem.jsx","components/GifGrid.jsx","hooks/useFetchGifs.jsx","GifApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cats","placeholder","onSearch","value","enterButton","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","hoverable","bordered","style","width","height","marginRight","marginTop","cover","src","alt","className","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","key","GifApp","categories","textAlign","color","ReactDOM","render","document","getElementById"],"mappings":"mOAIaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACZC,mBAAS,IADG,mBACzCC,EADyC,KAC7BC,EAD6B,KAehD,OACE,0BAAMC,SATa,SAACC,GACpBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAc,SAACS,GAAD,OAAWP,GAAX,mBAA0BO,OACxCN,EAAc,OAOd,kBAAC,IAAD,CACEO,YAAY,YACZC,SAjBoB,SAACC,GACzBT,EAAcS,IAiBVC,aAAW,M,yBCzBNC,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,4DACL,mCACF,GAEVC,EAAM,GAGLA,EADe,KAApBF,EAASR,OAEH,kFACE,uDARQ,mCAQR,cAAgEW,UAClEH,GADE,kBAPM,IAFO,SAaFI,MAAMF,GAbJ,cAafG,EAbe,gBAcEA,EAAKC,OAdP,uBAcbC,EAda,EAcbA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC7B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QApBjB,kBAuBdM,GAvBc,4CAAH,sD,SCGPO,EAAc,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IACnC,OACE,kBAAC,IAAD,CACEc,WAAS,EACTC,UAAQ,EACRL,MAAOA,EACPM,MAAO,CAAEC,MAAO,IAAKC,OAAQ,IAAKC,YAAa,GAAIC,UAAW,IAC9DC,MACE,yBACEC,IAAKtB,EACLuB,IAAKb,EACLc,UAAU,kDCVPC,EAAU,SAAC,GAAkB,IAAhB3B,EAAe,EAAfA,SAAe,ECAb,SAACA,GAAc,IAAD,EACdd,mBAAS,CACjCqB,KAAM,GACNqB,SAAS,IAH6B,mBACjCC,EADiC,KAC1BC,EAD0B,KAexC,OATAC,qBAAU,WACRhC,EAAQC,GAAUgC,MAAK,SAACC,GACtBH,EAAS,CACPvB,KAAM0B,EACNL,SAAS,SAGZ,CAAC5B,IAEG6B,EDd2BK,CAAalC,GAAjCa,EADyB,EAC/BN,KAAcqB,EADiB,EACjBA,QAEtB,OACE,oCACE,4BAAK5B,GACJ4B,GAAW,uBAAGF,UAAU,oCAAb,WAEZ,yBAAKA,UAAU,+CACZb,EAAOJ,KAAI,SAACC,GAAD,OACV,kBAAC,EAAD,eAAayB,IAAKzB,EAAIC,IAAQD,UEX3B0B,EAAS,WAAO,IAAD,EACUlD,mBAAS,CAAC,KADpB,mBACnBmD,EADmB,KACPpD,EADO,KAG1B,OACE,6BACE,wBAAIiC,MAAO,CAACoB,UAAU,SAAUC,MAAO,SAAvC,YACA,kBAAC,EAAD,CAAatD,cAAeA,IAC5B,4BACGoD,EAAW5B,KAAI,SAACT,GAAD,OACd,kBAAC,EAAD,CAASmC,IAAKnC,EAAUA,SAAUA,U,OCN5CwC,IAASC,OACP,kBAAC,EAAD,MAEAC,SAASC,eAAe,U","file":"static/js/main.5eb8851b.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Search from \"antd/lib/input/Search\";\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n  const [inputValue, setinputValue] = useState(\"\");\r\n\r\n  const handleInputChange = (value) => {\r\n    setinputValue(value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (inputValue.trim().length > 2) {\r\n      setCategories((cats) => [inputValue, ...cats]);\r\n      setinputValue(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      {/* <input type=\"text\" value={inputValue} onChange={handleInputChange} /> */}\r\n      <Search\r\n        placeholder=\"Buscar...\"\r\n        onSearch={handleInputChange}\r\n        enterButton\r\n      />\r\n    </form>\r\n  );\r\n};\r\n\r\nAddCategory.propTypes = {\r\n  setCategories: PropTypes.func.isRequired,\r\n};\r\n","export const getGifs = async (category) => {\r\n  const api_key = \"8xSWjOE7yXPxfCWdX3G1fnYUCPrUIfc5\";\r\n  const limit = 15;\r\n\r\n  let url = \"\";\r\n\r\n  category.trim() === \"\"\r\n    ? (url =\r\n        \"https://api.giphy.com/v1/gifs/trending?api_key=8xSWjOE7yXPxfCWdX3G1fnYUCPrUIfc5\")\r\n    : (url = `https://api.giphy.com/v1/gifs/search?api_key=${api_key}&q=${encodeURI(\r\n        category\r\n      )}&limit=${limit}`);\r\n\r\n  const resp = await fetch(url);\r\n  const { data } = await resp.json();\r\n\r\n  const gifs = data.map((img) => {\r\n    return {\r\n      id: img.id,\r\n      title: img.title,\r\n      url: img.images?.downsized_medium.url,\r\n    };\r\n  });\r\n  return gifs;\r\n};\r\n","import React from \"react\";\r\nimport { Card } from \"antd\";\r\n\r\nexport const GifGridItem = ({ title, url }) => {\r\n  return (\r\n    <Card\r\n      hoverable\r\n      bordered\r\n      title={title}\r\n      style={{ width: 240, height: 300, marginRight: 20, marginTop: 20 }}\r\n      cover={\r\n        <img\r\n          src={url}\r\n          alt={title}\r\n          className=\"card-img animate__animated animate__fadeIn\"\r\n        />\r\n      }\r\n    ></Card>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\r\nimport { GifGridItem } from \"./GifGridItem\";\r\n\r\nexport const GifGrid = ({ category }) => {\r\n  const { data: images, loading } = useFetchGifs(category);\r\n\r\n  return (\r\n    <>\r\n      <h3>{category}</h3>\r\n      {loading && <p className=\"animate__animated animate__flash\">Loading</p>}\r\n\r\n      <div className=\"card-grid animate__animated animate__fadeIn\">\r\n        {images.map((img) => (\r\n          <GifGridItem key={img.id} {...img} />\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { getGifs } from \"../components/helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n  const [state, setstate] = useState({\r\n    data: [],\r\n    loading: true,\r\n  });\r\n\r\n  useEffect(() => {\r\n    getGifs(category).then((imgs) => {\r\n      setstate({\r\n        data: imgs,\r\n        loading: false,\r\n      });\r\n    });\r\n  }, [category]);\r\n\r\n  return state;\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { AddCategory } from \"./components/AddCategory\";\r\nimport { GifGrid } from \"./components/GifGrid\";\r\nexport const GifApp = () => {\r\n  const [categories, setCategories] = useState([\"\"]);\r\n\r\n  return (\r\n    <div>\r\n      <h2 style={{textAlign:\"center\", color: \"#FFF\"}}>Gifs APP</h2>\r\n      <AddCategory setCategories={setCategories} />\r\n      <ol>\r\n        {categories.map((category) => (\r\n          <GifGrid key={category} category={category} />\r\n        ))}\r\n      </ol>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { GifApp } from \"./GifApp\";\nimport \"antd/dist/antd.css\";\n\nReactDOM.render(\n  <GifApp />,\n\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}